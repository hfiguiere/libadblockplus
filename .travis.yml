language: cpp

os:
  - linux
  - osx

dist: trusty
sudo: false

compiler: clang

addons:
  apt:
    sources:
    - 'ubuntu-toolchain-r-test'
#    - llvm-toolchain-trusty-4.0
    packages:
    - binutils-gold
    - libcurl4-openssl-dev
#    - g++-7
    - p7zip-full
#    - clang-4.0

python: '2.7'

env:
  global:
  - URL_PREFIX=https://v8.eyeofiles.com/v8-4fc9a2fe7f8a7ef1e7966185b39b3b541792669a/
  - ANDROID_NDK_ROOT=${TRAVIS_BUILD_DIR}/third_party/android-ndk-r16b
  matrix:
  - BUILD_ACTION=test
  - BUILD_ACTION=all TARGET_OS=android Configuration=release ABP_TARGET_ARCH=arm
  - BUILD_ACTION=all TARGET_OS=android Configuration=release ABP_TARGET_ARCH=arm64
  - BUILD_ACTION=all TARGET_OS=android Configuration=release ABP_TARGET_ARCH=ia32

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install p7zip; fi
#  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export CXX=g++-7 CC=gcc-7; fi
  - make get-prebuilt-v8
  - ./ensure_dependencies.py
  - if [[ "${TARGET_OS}" == "android" && "$TRAVIS_OS_NAME" == "linux" ]]; then wget https://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip -O third_party/android-ndk.zip ; fi
  - if [[ "${TARGET_OS}" == "android" && "$TRAVIS_OS_NAME" == "osx" ]]; then wget https://dl.google.com/android/repository/android-ndk-r16b-darwin-x86_64.zip -O third_party/android-ndk.zip ; fi
  - if [[ "${TARGET_OS}" == "android" ]]; then unzip -q third_party/android-ndk.zip -d third_party/ ; fi

script:
  - make ${BUILD_ACTION}

notifications:
  email: false
